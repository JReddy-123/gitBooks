// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  firstName     String    @map("first_name")
  lastName      String    @map("last_name")
  phone         String?
  profileImage  String?   @map("profile_image")
  role          Role      @default(USER)
  isActive      Boolean   @default(true) @map("is_active")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  
  listings      Listing[]
  
  @@map("users")
}

model Listing {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  price         Decimal   @db.Decimal(10, 2)
  condition     Condition @default(USED)
  category      Category
  images        String[]  @default([])
  isAvailable   Boolean   @default(true) @map("is_available")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  
  seller        User      @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  sellerId      Int       @map("seller_id")
  
  @@map("listings")
}

enum Role {
  USER
  ADMIN
}

enum Condition {
  NEW
  LIKE_NEW
  GOOD
  FAIR
  USED
}

enum Category {
  TEXTBOOKS
  ELECTRONICS
  FURNITURE
  CLOTHING
  SCHOOL_SUPPLIES
  OTHER
}